{
  "address": "0x13D79a0D37c54ddB25Bc7f7350A524B235477cb2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8b61cbbfe9ae4a123af3941e0777368be700adfdefb247eecf9f968b7db2dd39",
  "receipt": {
    "to": null,
    "from": "0x29A7d4dc5C6Bae5948f9eef358CfEa6450737Ab3",
    "contractAddress": "0x13D79a0D37c54ddB25Bc7f7350A524B235477cb2",
    "transactionIndex": 47,
    "gasUsed": "811139",
    "logsBloom": "0x
    "blockHash": "0x056dcdbb6d8df8e8da6e613a6df2137ec0c27baa1fc3eb21ba1e8f306638493e",
    "transactionHash": "0x8b61cbbfe9ae4a123af3941e0777368be700adfdefb247eecf9f968b7db2dd39",
    "logs": [],
    "blockNumber": 7080262,
    "cumulativeGasUsed": "7811478",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "a98291d1d36f24fd9d9207c5be04bd4c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"priceFeedAddress\":\"The address of the Chainlink ETH/USD price feed\"}},\"fund()\":{\"details\":\"Uses PriceConverter library for ETH to USD conversion\"},\"withdraw()\":{\"details\":\"Resets funder balances to zero and empties funders array\"}},\"title\":\"FundMe Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Sets the owner and initializes the price feed\"},\"fund()\":{\"notice\":\"Allows funding if minimum USD amount is met\"},\"withdraw()\":{\"notice\":\"Allows the owner to withdraw all funds from the contract\"}},\"notice\":\"A contract for crowd-funding using ETH with minimum USD requirement, leveraging Chainlink price feeds.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\n/// @title FundMe Contract\\n/// @notice A contract for crowd-funding using ETH with minimum USD requirement, leveraging Chainlink price feeds.\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n    \\n    // Contract owner's address, set at deployment\\n    address public immutable i_owner;\\n    \\n    // Minimum USD amount required to fund (50 USD, scaled to 18 decimals)\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    /// @notice Sets the owner and initializes the price feed\\n    /// @param priceFeedAddress The address of the Chainlink ETH/USD price feed\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /// @notice Allows funding if minimum USD amount is met\\n    /// @dev Uses PriceConverter library for ETH to USD conversion\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"Minimum funding amount not met\\\");\\n        \\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n\\n    /// @notice Ensures only the contract owner can call a function\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    /// @notice Allows the owner to withdraw all funds from the contract\\n    /// @dev Resets funder balances to zero and empties funders array\\n     function withdraw() public onlyOwner {\\n        for (uint256 i=0; i < funders.length; i++){\\n            address funder = funders[i];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        \\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    /// @notice Fallback function to handle plain ETH transfers\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /// @notice Receive function to handle ETH transfers with empty calldata\\n    receive() external payable {\\n        fund();\\n    }\\n}\",\"keccak256\":\"0x63a12991779685895aabc4e2ffe61ec967aec1ccc541d2d3ba1c28663f530cc8\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n/// @title PriceConverter Library\\r\\n/// @notice Provides ETH to USD conversion using Chainlink price feeds\\r\\nlibrary PriceConverter {\\r\\n    \\r\\n    /// @notice Retrieves the latest ETH/USD price from Chainlink Price Feed\\r\\n    /// @dev Uses Sepolia network price feed address for ETH/USD\\r\\n    /// @return ethPriceInUsd Current ETH price in USD with 18 decimal precision\\r\\n    function getEthPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        // ETH/USD price feed address on Sepolia Testnet\\r\\n       \\r\\n\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        \\r\\n        // Adjusts ETH price to 18 decimal places\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    /// @notice Converts an ETH amount to its equivalent USD value\\r\\n    /// @param ethAmount Amount in wei (1e18 wei = 1 ETH)\\r\\n    /// @return usdEquivalent USD equivalent of the specified ETH amount\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        uint256 ethPriceInUsd = getEthPrice(priceFeed); // Current price of 1 ETH in USD (18 decimals)\\r\\n        \\r\\n        // Calculates ETH amount in USD, keeping 18 decimal precision\\r\\n        uint256 usdEquivalent = (ethPriceInUsd * ethAmount) / 1e18;\\r\\n        \\r\\n        return usdEquivalent;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xedeff2c55fbebd9bdf567a874702e21b397a1a7f8cdd352db0a79736b6c5ca25\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ea7380380610ea783398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d4861015f600039600081816102e5015261056a0152610d486000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a2565b61051d565b6040516100d891906107e8565b60405180910390f35b3480156100ed57600080fd5b506100f6610535565b60405161010391906107e8565b60405180910390f35b34801561011857600080fd5b50610121610542565b60405161012e9190610862565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610568565b604051610163919061088c565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d3565b61058c565b6040516101a0919061088c565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cb90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109ac565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610368576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561040d5760006001828154811061038e5761038d6109e0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061036b565b50600067ffffffffffffffff81111561042957610428610a0f565b5b6040519080825280602002602001820160405280156104575781602001602082028036833780820191505090505b506001908051906020019061046d929190610698565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049490610a6f565b60006040518083038185875af1925050503d80600081146104d1576040519150601f19603f3d011682016040523d82523d6000602084013e6104d6565b606091505b505090508061051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610ad0565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d783610607565b90506000670de0b6b3a764000085836105f09190610af0565b6105fa9190610b61565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106799190610c1f565b5050509150506402540be400816106909190610c9a565b915050919050565b828054828255906000526020600020908101928215610711579160200282015b828111156107105782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b8565b5b50905061071e9190610722565b5090565b5b8082111561073b576000816000905550600101610723565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076f82610744565b9050919050565b61077f81610764565b811461078a57600080fd5b50565b60008135905061079c81610776565b92915050565b6000602082840312156107b8576107b761073f565b5b60006107c68482850161078d565b91505092915050565b6000819050919050565b6107e2816107cf565b82525050565b60006020820190506107fd60008301846107d9565b92915050565b6000819050919050565b600061082861082361081e84610744565b610803565b610744565b9050919050565b600061083a8261080d565b9050919050565b600061084c8261082f565b9050919050565b61085c81610841565b82525050565b60006020820190506108776000830184610853565b92915050565b61088681610764565b82525050565b60006020820190506108a1600083018461087d565b92915050565b6108b0816107cf565b81146108bb57600080fd5b50565b6000813590506108cd816108a7565b92915050565b6000602082840312156108e9576108e861073f565b5b60006108f7848285016108be565b91505092915050565b600082825260208201905092915050565b7f4d696e696d756d2066756e64696e6720616d6f756e74206e6f74206d65740000600082015250565b6000610947601e83610900565b915061095282610911565b602082019050919050565b600060208201905081810360008301526109768161093a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b7826107cf565b91506109c2836107cf565b92508282019050808211156109da576109d961097d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a59600083610a3e565b9150610a6482610a49565b600082019050919050565b6000610a7a82610a4c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610aba600b83610900565b9150610ac582610a84565b602082019050919050565b60006020820190508181036000830152610ae981610aad565b9050919050565b6000610afb826107cf565b9150610b06836107cf565b9250828202610b14816107cf565b91508282048414831517610b2b57610b2a61097d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b6c826107cf565b9150610b77836107cf565b925082610b8757610b86610b32565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb181610b92565b8114610bbc57600080fd5b50565b600081519050610bce81610ba8565b92915050565b6000819050919050565b610be781610bd4565b8114610bf257600080fd5b50565b600081519050610c0481610bde565b92915050565b600081519050610c19816108a7565b92915050565b600080600080600060a08688031215610c3b57610c3a61073f565b5b6000610c4988828901610bbf565b9550506020610c5a88828901610bf5565b9450506040610c6b88828901610c0a565b9350506060610c7c88828901610c0a565b9250506080610c8d88828901610bbf565b9150509295509295909350565b6000610ca582610bd4565b9150610cb083610bd4565b9250828202610cbe81610bd4565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cf657610cf561097d565b5b8282058414831517610d0b57610d0a61097d565b5b509291505056fea2646970667358221220878f8b321ff7e45037557099def14770e155d4c61da708b7b43f765ccccd6cc864736f6c634300081b0033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a2565b61051d565b6040516100d891906107e8565b60405180910390f35b3480156100ed57600080fd5b506100f6610535565b60405161010391906107e8565b60405180910390f35b34801561011857600080fd5b50610121610542565b60405161012e9190610862565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610568565b604051610163919061088c565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d3565b61058c565b6040516101a0919061088c565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cb90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109ac565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610368576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561040d5760006001828154811061038e5761038d6109e0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061036b565b50600067ffffffffffffffff81111561042957610428610a0f565b5b6040519080825280602002602001820160405280156104575781602001602082028036833780820191505090505b506001908051906020019061046d929190610698565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049490610a6f565b60006040518083038185875af1925050503d80600081146104d1576040519150601f19603f3d011682016040523d82523d6000602084013e6104d6565b606091505b505090508061051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610ad0565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d783610607565b90506000670de0b6b3a764000085836105f09190610af0565b6105fa9190610b61565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106799190610c1f565b5050509150506402540be400816106909190610c9a565b915050919050565b828054828255906000526020600020908101928215610711579160200282015b828111156107105782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b8565b5b50905061071e9190610722565b5090565b5b8082111561073b576000816000905550600101610723565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076f82610744565b9050919050565b61077f81610764565b811461078a57600080fd5b50565b60008135905061079c81610776565b92915050565b6000602082840312156107b8576107b761073f565b5b60006107c68482850161078d565b91505092915050565b6000819050919050565b6107e2816107cf565b82525050565b60006020820190506107fd60008301846107d9565b92915050565b6000819050919050565b600061082861082361081e84610744565b610803565b610744565b9050919050565b600061083a8261080d565b9050919050565b600061084c8261082f565b9050919050565b61085c81610841565b82525050565b60006020820190506108776000830184610853565b92915050565b61088681610764565b82525050565b60006020820190506108a1600083018461087d565b92915050565b6108b0816107cf565b81146108bb57600080fd5b50565b6000813590506108cd816108a7565b92915050565b6000602082840312156108e9576108e861073f565b5b60006108f7848285016108be565b91505092915050565b600082825260208201905092915050565b7f4d696e696d756d2066756e64696e6720616d6f756e74206e6f74206d65740000600082015250565b6000610947601e83610900565b915061095282610911565b602082019050919050565b600060208201905081810360008301526109768161093a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b7826107cf565b91506109c2836107cf565b92508282019050808211156109da576109d961097d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a59600083610a3e565b9150610a6482610a49565b600082019050919050565b6000610a7a82610a4c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610aba600b83610900565b9150610ac582610a84565b602082019050919050565b60006020820190508181036000830152610ae981610aad565b9050919050565b6000610afb826107cf565b9150610b06836107cf565b9250828202610b14816107cf565b91508282048414831517610b2b57610b2a61097d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b6c826107cf565b9150610b77836107cf565b925082610b8757610b86610b32565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb181610b92565b8114610bbc57600080fd5b50565b600081519050610bce81610ba8565b92915050565b6000819050919050565b610be781610bd4565b8114610bf257600080fd5b50565b600081519050610c0481610bde565b92915050565b600081519050610c19816108a7565b92915050565b600080600080600060a08688031215610c3b57610c3a61073f565b5b6000610c4988828901610bbf565b9550506020610c5a88828901610bf5565b9450506040610c6b88828901610c0a565b9350506060610c7c88828901610c0a565b9250506080610c8d88828901610bbf565b9150509295509295909350565b6000610ca582610bd4565b9150610cb083610bd4565b9250828202610cbe81610bd4565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cf657610cf561097d565b5b8282058414831517610d0b57610d0a61097d565b5b509291505056fea2646970667358221220878f8b321ff7e45037557099def14770e155d4c61da708b7b43f765ccccd6cc864736f6c634300081b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "priceFeedAddress": "The address of the Chainlink ETH/USD price feed"
        }
      },
      "fund()": {
        "details": "Uses PriceConverter library for ETH to USD conversion"
      },
      "withdraw()": {
        "details": "Resets funder balances to zero and empties funders array"
      }
    },
    "title": "FundMe Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Sets the owner and initializes the price feed"
      },
      "fund()": {
        "notice": "Allows funding if minimum USD amount is met"
      },
      "withdraw()": {
        "notice": "Allows the owner to withdraw all funds from the contract"
      }
    },
    "notice": "A contract for crowd-funding using ETH with minimum USD requirement, leveraging Chainlink price feeds.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}